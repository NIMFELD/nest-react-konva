{"ast":null,"code":"// src/main/Embeddable.tsx\nimport * as React from \"react\";\n\n// src/main/util.ts\nvar didPropsChange = (prevProps, nextProps) => {\n  if (Object.keys(prevProps).length !== Object.keys(nextProps).length) {\n    return true;\n  }\n  return Object.keys(nextProps).some(propName => {\n    let prevValue = prevProps[propName];\n    let nextValue = nextProps[propName];\n    if (prevValue && nextValue) {\n      if (typeof prevValue === \"function\" && typeof nextValue === \"function\") {\n        return prevValue.toString() !== nextValue.toString();\n      }\n      if (typeof prevValue === \"object\" && typeof nextValue === \"object\") {\n        return didPropsChange(prevValue, nextValue);\n      }\n    }\n    return prevValue !== nextValue;\n  });\n};\n\n// src/main/Embeddable.tsx\nvar _Embeddable = class _Embeddable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.container = React.createRef();\n    this.firstRender = true;\n  }\n  componentDidMount() {\n    if (!_Embeddable.seatsioBundles[this.getChartUrl()] || this.firstRender) {\n      this.createAndRenderChart();\n      this.firstRender = false;\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.chart) {\n      this.chart.config = this.extractConfigFromProps();\n      if (didPropsChange(this.props, prevProps)) {\n        this.destroyChart();\n        this.createAndRenderChart();\n      }\n    }\n  }\n  getChartUrl() {\n    return this.props.chartJsUrl.replace(\"{region}\", this.props.region);\n  }\n  async createAndRenderChart() {\n    const seatsio2 = await this.loadSeatsio();\n    const config = this.extractConfigFromProps();\n    this.chart = this.createChart(seatsio2, config).render();\n    if (this.props.onRenderStarted) {\n      this.props.onRenderStarted(this.chart);\n    }\n  }\n  extractConfigFromProps() {\n    let {\n      chartJsUrl,\n      divId,\n      onRenderStarted,\n      region,\n      ...config\n    } = this.props;\n    config.container = this.container.current;\n    return config;\n  }\n  componentWillUnmount() {\n    this.destroyChart();\n  }\n  destroyChart() {\n    if (this.chart && this.chart.state !== \"DESTROYED\") {\n      this.chart.destroy();\n    }\n  }\n  loadSeatsio() {\n    const chartUrl = this.getChartUrl();\n    if (!_Embeddable.seatsioBundles[chartUrl]) {\n      _Embeddable.seatsioBundles[chartUrl] = new Promise((resolve, reject) => {\n        const script = document.head.appendChild(document.createElement(\"script\"));\n        window.seatsio = void 0;\n        script.onload = () => {\n          resolve(seatsio);\n        };\n        script.onerror = () => reject(`Could not load ${script.src}`);\n        script.src = chartUrl;\n      });\n    }\n    return _Embeddable.seatsioBundles[chartUrl];\n  }\n  render() {\n    return /* @__PURE__ */React.createElement(\"div\", {\n      ref: this.container,\n      style: {\n        \"height\": \"100%\",\n        \"width\": \"100%\"\n      }\n    });\n  }\n};\n_Embeddable.seatsioBundles = {};\n_Embeddable.defaultProps = {\n  chartJsUrl: \"https://cdn-{region}.seatsio.net/chart.js\"\n};\nvar Embeddable = _Embeddable;\n\n// src/main/SeatsioDesigner.tsx\nvar SeatsioDesigner = class extends Embeddable {\n  createChart(seatsio2, config) {\n    return new seatsio2.SeatingChartDesigner(config);\n  }\n};\n\n// src/main/SeatsioEventManager.tsx\nvar SeatsioEventManager = class extends Embeddable {\n  createChart(seatsio2, config) {\n    return new seatsio2.EventManager(config);\n  }\n};\n\n// src/main/SeatsioSeatingChart.tsx\nvar SeatsioSeatingChart = class extends Embeddable {\n  createChart(seatsio2, config) {\n    return new seatsio2.SeatingChart(config);\n  }\n};\n\n// src/main/index.ts\nimport { isBooth, isGeneralAdmission, isSeat, isTable } from \"@seatsio/seatsio-types\";\nexport { SeatsioDesigner, SeatsioEventManager, SeatsioSeatingChart, isBooth, isGeneralAdmission, isSeat, isTable };","map":{"version":3,"names":["React","didPropsChange","prevProps","nextProps","Object","keys","length","some","propName","prevValue","nextValue","toString","_Embeddable","Component","constructor","props","container","createRef","firstRender","componentDidMount","seatsioBundles","getChartUrl","createAndRenderChart","componentDidUpdate","chart","config","extractConfigFromProps","destroyChart","chartJsUrl","replace","region","seatsio2","loadSeatsio","createChart","render","onRenderStarted","divId","current","componentWillUnmount","state","destroy","chartUrl","Promise","resolve","reject","script","document","head","appendChild","createElement","window","seatsio","onload","onerror","src","ref","style","defaultProps","Embeddable","SeatsioDesigner","SeatingChartDesigner","SeatsioEventManager","EventManager","SeatsioSeatingChart","SeatingChart","isBooth","isGeneralAdmission","isSeat","isTable"],"sources":["/home/david/Downloads/nestjs-react-seat-io/frontend/node_modules/.pnpm/@seatsio+seatsio-react@15.11.0_react@18.3.1/node_modules/@seatsio/seatsio-react/src/main/Embeddable.tsx","/home/david/Downloads/nestjs-react-seat-io/frontend/node_modules/.pnpm/@seatsio+seatsio-react@15.11.0_react@18.3.1/node_modules/@seatsio/seatsio-react/src/main/util.ts","/home/david/Downloads/nestjs-react-seat-io/frontend/node_modules/.pnpm/@seatsio+seatsio-react@15.11.0_react@18.3.1/node_modules/@seatsio/seatsio-react/src/main/SeatsioDesigner.tsx","/home/david/Downloads/nestjs-react-seat-io/frontend/node_modules/.pnpm/@seatsio+seatsio-react@15.11.0_react@18.3.1/node_modules/@seatsio/seatsio-react/src/main/SeatsioEventManager.tsx","/home/david/Downloads/nestjs-react-seat-io/frontend/node_modules/.pnpm/@seatsio+seatsio-react@15.11.0_react@18.3.1/node_modules/@seatsio/seatsio-react/src/main/SeatsioSeatingChart.tsx","/home/david/Downloads/nestjs-react-seat-io/frontend/node_modules/.pnpm/@seatsio+seatsio-react@15.11.0_react@18.3.1/node_modules/@seatsio/seatsio-react/src/main/index.ts"],"sourcesContent":["import * as React from 'react'\nimport {didPropsChange} from './util'\nimport {ChartDesigner, CommonConfigOptions, EventManager, Region, SeatingChart, Seatsio} from '@seatsio/seatsio-types'\n\nexport type EmbeddableProps<T> = {\n    onRenderStarted?: (chart: SeatingChart | EventManager) => void\n    chartJsUrl?: string\n    region: Region\n} & T\n\nexport default abstract class Embeddable<T extends CommonConfigOptions> extends React.Component<EmbeddableProps<T>> {\n    private container: React.RefObject<HTMLDivElement>\n    private chart: SeatingChart\n    private firstRender: boolean\n\n    private static seatsioBundles: { [key: string]: Promise<Seatsio> } = {}\n\n    static defaultProps = {\n        chartJsUrl: 'https://cdn-{region}.seatsio.net/chart.js'\n    }\n\n    constructor(props: EmbeddableProps<T>) {\n        super(props);\n        this.container = React.createRef()\n        this.firstRender = true\n    }\n\n    abstract createChart (seatsio: Seatsio, config: T): SeatingChart | EventManager | ChartDesigner\n\n    componentDidMount () {\n        if (!Embeddable.seatsioBundles[this.getChartUrl()] || this.firstRender) {\n            this.createAndRenderChart()\n            this.firstRender = false\n        }\n    }\n\n    componentDidUpdate (prevProps: EmbeddableProps<T>) {\n        if(this.chart) {\n            // @ts-ignore\n            this.chart.config = this.extractConfigFromProps()\n            if (didPropsChange(this.props, prevProps)) {\n                this.destroyChart()\n                this.createAndRenderChart()\n            }\n        }\n    }\n\n    getChartUrl () {\n        return this.props.chartJsUrl.replace('{region}', this.props.region)\n    }\n\n    async createAndRenderChart () {\n        const seatsio = await this.loadSeatsio()\n        const config = this.extractConfigFromProps()\n        this.chart = this.createChart(seatsio, config).render()\n        if (this.props.onRenderStarted) {\n            this.props.onRenderStarted(this.chart)\n        }\n    }\n\n    extractConfigFromProps (): any {\n        let { chartJsUrl, divId, onRenderStarted, region, ...config } = this.props\n        // @ts-ignore\n        config.container = this.container.current\n        return config\n    }\n\n    componentWillUnmount () {\n        this.destroyChart()\n    }\n\n    destroyChart () {\n        if (this.chart && (this.chart as any).state !== 'DESTROYED') {\n            this.chart.destroy()\n        }\n    }\n\n    loadSeatsio (): Promise<Seatsio> {\n        const chartUrl = this.getChartUrl()\n        if (!Embeddable.seatsioBundles[chartUrl]) {\n            Embeddable.seatsioBundles[chartUrl] = new Promise<Seatsio>((resolve, reject) => {\n                const script = document.head.appendChild(document.createElement('script'))\n                // Seatsio global is not replaced if already present, which would cause the wrong region bundle to resolve when changing region\n                window.seatsio = undefined\n                script.onload = () => {\n                    resolve(seatsio)\n                }\n                script.onerror = () => reject(`Could not load ${script.src}`)\n                script.src = chartUrl\n            })\n        }\n\n        return Embeddable.seatsioBundles[chartUrl]\n    }\n\n    render (): React.ReactNode {\n        return (\n            <div ref={this.container as unknown as React.RefObject<HTMLDivElement>} style={{'height': '100%', 'width': '100%'}} />\n        )\n    }\n}\n","import {Booth, GeneralAdmissionArea, InteractiveSection, Seat, SelectableObject, Table} from \"@seatsio/seatsio-types\"\n\nexport const didPropsChange = <P extends { [key: string]: any}>(prevProps: P, nextProps: P): boolean => {\n    if (Object.keys(prevProps).length !== Object.keys(nextProps).length) {\n        return true\n    }\n    return Object.keys(nextProps).some((propName: string) => {\n        let prevValue = prevProps[propName]\n        let nextValue = nextProps[propName]\n        if (prevValue && nextValue) {\n            if (typeof prevValue === 'function' && typeof nextValue === 'function') {\n                return prevValue.toString() !== nextValue.toString()\n            }\n            if (typeof prevValue === 'object' && typeof nextValue === 'object') {\n                return didPropsChange(prevValue, nextValue)\n            }\n        }\n        return prevValue !== nextValue\n    })\n}\n","import Embeddable from './Embeddable'\nimport { ChartDesignerConfigOptions, Seatsio } from '@seatsio/seatsio-types'\n\nexport default class SeatsioDesigner extends Embeddable<ChartDesignerConfigOptions> {\n    createChart (seatsio: Seatsio, config: ChartDesignerConfigOptions) {\n        return new seatsio.SeatingChartDesigner(config)\n    }\n}","import { EventManagerConfigOptions, Seatsio } from '@seatsio/seatsio-types'\nimport Embeddable from './Embeddable'\n\nexport default class SeatsioEventManager extends Embeddable<EventManagerConfigOptions> {\n    createChart (seatsio: Seatsio, config: EventManagerConfigOptions) {\n        return new seatsio.EventManager(config)\n    }\n}","import { ChartRendererConfigOptions, Seatsio } from '@seatsio/seatsio-types'\nimport Embeddable from './Embeddable'\n\nexport default class SeatsioSeatingChart extends Embeddable<ChartRendererConfigOptions> {\n    createChart (seatsio: Seatsio, config: ChartRendererConfigOptions) {\n        return new seatsio.SeatingChart(config)\n    }\n}","export { default as SeatsioDesigner } from './SeatsioDesigner'\nexport { default as SeatsioEventManager } from './SeatsioEventManager'\nexport { default as SeatsioSeatingChart } from './SeatsioSeatingChart'\nexport { isBooth, isGeneralAdmission, isSeat, isTable } from '@seatsio/seatsio-types'\nexport type * from '@seatsio/seatsio-types'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}